version: '3.8'

services:
  trading-bot:
    build: .
    container_name: trading-bot
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./app/config:/app/app/config
    ports:
      - "8080:8080"  # GUI port
      - "5000:5000"  # API port
    environment:
      - PYTHONPATH=/app
      - DATA_DIR=/app/data
      - LOG_LEVEL=INFO
      - EXCHANGE_ID=${EXCHANGE_ID:-binance}
      - EXCHANGE_API_KEY=${EXCHANGE_API_KEY}
      - EXCHANGE_API_SECRET=${EXCHANGE_API_SECRET}
      - EXCHANGE_TESTNET=${EXCHANGE_TESTNET:-true}
      - TRADING_MAX_POSITIONS=${TRADING_MAX_POSITIONS:-5}
      - TRADING_MIN_VOLATILITY=${TRADING_MIN_VOLATILITY:-0.01}
      - TRADING_MAX_POSITION_SIZE=${TRADING_MAX_POSITION_SIZE:-0.1}
      - TRADING_STOP_LOSS_PERCENT=${TRADING_STOP_LOSS_PERCENT:-0.02}
      - TRADING_TRAILING_STOP_PERCENT=${TRADING_TRAILING_STOP_PERCENT:-0.01}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional PostgreSQL service for data persistence
  db:
    image: postgres:15-alpine
    container_name: trading-bot-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER:-trading_bot}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-trading_bot_pass}
      - POSTGRES_DB=${DB_NAME:-trading_bot_db}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_bot"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
